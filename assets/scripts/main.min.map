{"version":3,"sources":["skip.js","top.js","service.js","main.js"],"names":["simulateClick","element","eventOptions","window","MouseEvent","bubbles","cancelable","view","dispatchEvent","displayTop","up","document","querySelector","body","scrollTop","documentElement","setAttribute","addEventListener","getTop","scrollToTop","scrollStep","scrollY","scrollInterval","setInterval","scrollBy","clearInterval","initialize","console","log","getSourceData","getPage","getContactEmail","getNetworkStatus","menu","overlayItem","getAttribute","previousElementSibling","textContent","contactItems","querySelectorAll","Array","from","forEach","contact","getContactEvent","event","id","target","emailData","replace","concat","removeAttribute","status","online","offline","updateNetworkStatus","navigator","onLine","setTimeout","displayLoader","fetchData","getStoredData","sessionStorage","getItem","getCountry","hideLoader","fetch","cache","then","response","json","data","setItem","JSON","stringify","error","getOption","select","optionList","storedData","rawData","parse","countries","Object","keys","arrayAll","values","countriesIcon","option","length","map","object","icon","push","arrayAllFlat","createElement","country","index","optionButton","innerHTML","appendChild","value","randomizeFact","flat","randomObject","Math","floor","random","roll","mapFact","array","factArray","randomItem","item","result","fact","resetMapFact","text","url","source","hasChildNodes","firstChild","removeChild","articleLoader","classList","add","remove","serviceWorker","register","key","contains","history","pushState","title","location","pathname","onscroll"],"mappings":"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","file":"main.min.js","sourcesContent":["// Simulate Click\r\ndocument.addEventListener(\"keydown\", (event) => {\r\n  const element = event.target;\r\n  //   console.log(element)\r\n  if (event.key === \"Enter\") {\r\n    if (element.classList.contains(\"skip\")) {\r\n      simulateClick(element);\r\n\r\n      if (history.pushState) {\r\n        history.pushState(\"\", document.title, window.location.pathname);\r\n      } else {\r\n        location = \"/\";\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nfunction simulateClick(element) {\r\n  // Create our event (with options)\r\n  const eventOptions = new window.MouseEvent(\"click\", {\r\n    bubbles: true,\r\n    cancelable: true,\r\n    view: window,\r\n  });\r\n  // If cancelled, don't dispatch our event\r\n  const cancelled = !element.dispatchEvent(eventOptions);\r\n\r\n  if (cancelled) {\r\n    // A handler called preventDefault.\r\n    // console.log('cancelled')\r\n  } else {\r\n    // None of the handlers called preventDefault.\r\n    // console.log('not cancelled')\r\n  }\r\n}","// Scroll To Top\r\nwindow.onscroll = function () {\r\n  displayTop();\r\n};\r\n\r\nfunction displayTop() {\r\n  const up = document.querySelector(\"#up\");\r\n\r\n  if (up) {\r\n    if (\r\n      document.body.scrollTop >= 375 ||\r\n      document.documentElement.scrollTop >= 375\r\n    ) {\r\n      up.setAttribute(\"data-open\", \"true\");\r\n    } else {\r\n      up.setAttribute(\"data-open\", \"false\");\r\n    }\r\n\r\n    up.addEventListener(\"click\", getTop, scrollToTop);\r\n  }\r\n}\r\n\r\n// IE and Edge Function\r\nfunction getTop() {\r\n  document.body.scrollTop = 0;\r\n  document.documentElement.scrollTop = 0;\r\n}\r\n\r\n// Angular Compatible Function\r\nfunction scrollToTop() {\r\n  let scrollStep = -window.scrollY / (500 / 15);\r\n  let scrollInterval = setInterval(() => {\r\n    if (window.scrollY !== 0) {\r\n      window.scrollBy(0, scrollStep);\r\n    } else clearInterval(scrollInterval);\r\n  }, 15);\r\n}\r\n","// Check the browser to make sure it supports service workers\r\nif('serviceWorker' in navigator) {\r\n    navigator.serviceWorker\r\n    // Register the path to the service worker file\r\n    .register('./serviceWorker.js')\r\n    .then(function() {\r\n        console.log('Service Worker is Registered');\r\n    })\r\n}","// Initialize\r\nwindow.addEventListener(\"load\", initialize);\r\n\r\nfunction initialize() {\r\n  console.log(\"Welcome! ðŸ‘‹\");\r\n  getSourceData();\r\n  getPage();\r\n  getContactEmail();\r\n  getNetworkStatus();\r\n}\r\n\r\n// Page\r\nfunction getPage() {\r\n  let menu = document.querySelector(\"button#menu\");\r\n\r\n  if (menu) {\r\n    menu.addEventListener(\"click\", () => {\r\n      let overlayItem = document.querySelector(\"#info[data-open]\");\r\n\r\n      if (overlayItem.getAttribute(\"data-open\") == \"false\") {\r\n        overlayItem.setAttribute(\"data-open\", \"true\");\r\n        overlayItem.previousElementSibling.setAttribute(\"data-open\", \"false\");\r\n        menu.textContent = \"Close Info\";\r\n      } else {\r\n        overlayItem.setAttribute(\"data-open\", \"false\");\r\n        overlayItem.previousElementSibling.setAttribute(\"data-open\", \"true\");\r\n        menu.textContent = \"Info\";\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Email\r\nfunction getContactEmail() {\r\n  let contactItems = document.querySelectorAll(\"[data-email]\");\r\n  let contactArray = Array.from(contactItems);\r\n\r\n  contactArray.forEach((contact) => {\r\n    document.addEventListener(\"click\", (event) => {\r\n      getContactEvent(event);\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", (event) => {\r\n      if (event.key === \"Enter\") {\r\n        getContactEvent(event);\r\n      }\r\n    });\r\n\r\n    function getContactEvent(event) {\r\n      if (contact.id == event.target.id) {\r\n        let emailData = \"helloATfebreroDOTinfo\";\r\n        emailData = emailData.replace(/AT/, \"@\").replace(/DOT/, \".\");\r\n        contact.setAttribute(\"data-email\", \"true\");\r\n        contact.setAttribute(\"href\", `mailto:${emailData}`);\r\n      } else {\r\n        contact.setAttribute(\"data-email\", \"false\");\r\n        contact.removeAttribute(\"data-value\");\r\n        contact.removeAttribute(\"href\");\r\n        contact.removeAttribute(\"rel\");\r\n        contact.removeAttribute(\"target\");\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// Network\r\nfunction getNetworkStatus() {\r\n  let status = document.querySelector(\"#status\");\r\n  let online = document.querySelector(\"#online\");\r\n  let offline = document.querySelector(\"#offline\");\r\n\r\n  function updateNetworkStatus() {\r\n    let condition = navigator.onLine ? \"online\" : \"offline\";\r\n\r\n    if (condition === \"offline\") {\r\n      status.setAttribute(\"data-open\", \"true\");\r\n      offline.setAttribute(\"data-open\", \"true\");\r\n      online.setAttribute(\"data-open\", \"false\");\r\n    } else {\r\n      status.setAttribute(\"data-open\", \"true\");\r\n      online.setAttribute(\"data-open\", \"true\");\r\n      offline.setAttribute(\"data-open\", \"false\");\r\n\r\n      setTimeout(() => {\r\n        online.setAttribute(\"data-open\", \"false\");\r\n        status.setAttribute(\"data-open\", \"false\");\r\n      }, 5800);\r\n    }\r\n  }\r\n\r\n  window.addEventListener(\"online\", updateNetworkStatus);\r\n  window.addEventListener(\"offline\", updateNetworkStatus);\r\n}\r\n\r\n// Data Prep\r\nfunction getSourceData() {\r\n  displayLoader();\r\n  fetchData();\r\n}\r\n\r\nfunction getStoredData() {\r\n  let storedData = sessionStorage.getItem(\"data\");\r\n\r\n  if (storedData) {\r\n    getCountry();\r\n    hideLoader();\r\n  }\r\n}\r\n\r\nfunction fetchData() {\r\n  let storedData = sessionStorage.getItem(\"data\");\r\n\r\n  if (!storedData) {\r\n    fetch(\"./assets/data/collection.json\", {\r\n      cache: \"no-cache\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        sessionStorage.setItem(\"data\", JSON.stringify(data));\r\n        getStoredData();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error Source =>\", error);\r\n      });\r\n  } else {\r\n    getStoredData();\r\n  }\r\n}\r\n\r\nfunction getOption() {\r\n  let select = document.querySelector(\"#select\");\r\n\r\n  document.addEventListener(\"click\", (event) => {\r\n    if (event.target.id == \"select\") {\r\n      if (select.getAttribute(\"aria-expanded\") == \"true\") {\r\n        select.setAttribute(\"aria-expanded\", \"false\");\r\n      } else {\r\n        select.setAttribute(\"aria-expanded\", \"true\");\r\n      }\r\n    } else {\r\n      select.setAttribute(\"aria-expanded\", \"false\");\r\n    }\r\n  });\r\n}\r\n\r\nfunction getCountry() {\r\n  let storedData = sessionStorage.getItem(\"data\");\r\n  let rawData = JSON.parse(storedData)[0];\r\n  let countries = Object.keys(rawData);\r\n\r\n  let arrayAll = Object.values(rawData);\r\n  let countriesIcon = [];\r\n\r\n  if (countriesIcon.length == 0) {\r\n    arrayAll.map((object) => {\r\n      let icon = object[0].icon;\r\n      countriesIcon.push(icon);\r\n    });\r\n  }\r\n\r\n  let option = document.querySelector(\"#option\");\r\n  if(option) {\r\n    let optionList = document.createElement(\"div\");\r\n    optionList.setAttribute(\"class\", \"random__list\");\r\n    optionList.setAttribute(\"aria-labelledby\", \"select\");\r\n  \r\n    countries.map((country, index) => {\r\n      let optionButton = document.createElement(\"button\");\r\n      optionButton.setAttribute(\"class\", \"random__item\");\r\n      optionButton.setAttribute(\"value\", country);\r\n  \r\n      optionButton.innerHTML = `\r\n          <img src=\"${countriesIcon[index]}\" width=\"20\" height=\"15\" alt=\"Icon\">\r\n          <span>${country}</span>\r\n        `;\r\n      optionList.appendChild(optionButton);\r\n  \r\n      optionButton.addEventListener(\"click\", () => {\r\n        let selected = optionButton.value;\r\n  \r\n        if (selected == country) {\r\n          let selectedArray = rawData[country];\r\n          randomizeFact(selectedArray);\r\n  \r\n          // let selectedOption = optionButton.parentNode.previousElementSibling;\r\n          // selectedOption.textContent = selected;\r\n        }\r\n      });\r\n    });\r\n  \r\n    option.appendChild(optionList);\r\n  }\r\n\r\n  getOption();\r\n\r\n  // On load\r\n  let arrayAllFlat = arrayAll.flat();\r\n  let randomObject =\r\n    arrayAllFlat[Math.floor(Math.random() * arrayAllFlat.length)];\r\n\r\n  // On load and click\r\n  let roll = document.querySelector(\"#roll\");\r\n  if(roll) {\r\n    roll.addEventListener(\"click\", () => {\r\n      let randomObject =\r\n        arrayAllFlat[Math.floor(Math.random() * arrayAllFlat.length)];\r\n      mapFact(randomObject);\r\n    });\r\n  }\r\n\r\n  mapFact(randomObject);\r\n}\r\n\r\nfunction randomizeFact(array) {\r\n  // On load\r\n  let factArray = array;\r\n  let randomItem = factArray[Math.floor(Math.random() * factArray.length)];\r\n\r\n  // On load and click\r\n  let roll = document.querySelector(\"#roll\");\r\n  roll.addEventListener(\"click\", () => {\r\n    let item = factArray[Math.floor(Math.random() * factArray.length)];\r\n    mapFact(item);\r\n  });\r\n  \r\n  mapFact(randomItem);\r\n}\r\n\r\nfunction mapFact(item) {\r\n  let result = document.querySelector(\"#fact\");\r\n\r\n  resetMapFact();\r\n\r\n  let fact = {\r\n    id: item.id,\r\n    country: item.country,\r\n    text: item.fact,\r\n    url: item.source\r\n  };\r\n\r\n  result.innerHTML = `\r\n    <div class=\"fact\">\r\n      <section class=\"fact__content\">\r\n        <span class=\"fact__badge\">${fact.country} Fact# ${fact.id}</span>\r\n        <a href=\"${fact.url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"fact__link\">${fact.text}</a>\r\n      </section>\r\n    </div>\r\n  `;\r\n}\r\n\r\n// Reset\r\nfunction resetMapFact() {\r\n  let result = document.querySelector(\"#fact\");\r\n\r\n  if (result.hasChildNodes()) {\r\n    while (result.firstChild) {\r\n      result.removeChild(result.firstChild);\r\n    }\r\n  }\r\n}\r\n\r\n// Loader\r\nfunction displayLoader() {\r\n  let result = document.querySelector(\"#fact\");\r\n  if(result) {\r\n    result.classList.add(\"random__loader\");\r\n\r\n    let articleLoader = document.createElement(\"div\");\r\n    articleLoader.setAttribute(\"class\", \"loader\");\r\n    articleLoader.innerHTML = `\r\n    <span class=\"loader__item\"></span>\r\n    <span class=\"loader__item\"></span>\r\n    <span class=\"loader__item\"></span>\r\n    <span class=\"loader__item\"></span>\r\n    <span class=\"loader__item\"></span>`;\r\n    result.appendChild(articleLoader);\r\n  }\r\n\r\n}\r\n\r\nfunction hideLoader() {\r\n  let result = document.querySelector(\"#fact\");\r\n  if(result) {\r\n    result.classList.remove(\"random__loader\");\r\n  }\r\n}\r\n"]}